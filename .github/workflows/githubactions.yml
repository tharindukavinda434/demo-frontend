on:
    workflow_dispatch:
    push:
        branches:
            - master

env:
    REGISTRY: ghcr.io
    #IMAGE_NAME: ${{ github.repository_owner }}
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
jobs:
  Unit-Testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: echo "npm test"

  SAST-SonarCloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2.3.0
        with:
          args: >
            -Dsonar.projectKey=tharinduk_demo-frontend
            -Dsonar.organization=tharinduk
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.language=js


  Build-and-Push-Image:
    runs-on: ubuntu-latest
    needs: [SAST-SonarCloud, Unit-Testing]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Build the app
        run: npm run build
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: 'ghcr.io/${{ github.repository_owner }}/frontend:${{ github.sha }}'


  Deploy-to-Kubernetes:
    runs-on: ubuntu-latest
    needs: Build-and-Push-Image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update Kubernetes manifests
        run: |
          sed -i "s|image: .*$|image: ghcr.io/${{ github.repository_owner }}/frontend:${{ github.sha }}|g" ./k8s/deployment.yaml

      - name: Commit and push manifest updates
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ./k8s/deployment.yaml
          git commit -m "Update deployment image to ${{ github.sha }}"
          git push

      - name: Trigger ArgoCD Sync
        run: |
          kubectl --kubeconfig="${{ secrets.KUBECONFIG }}" apply -f ./k8s/deployment.yaml
          argocd app sync react-app